name: Run all of the integration tests.

on:
  deployment_status:
    branches-ignore:
      - main

jobs:
  validate-asyncapi:
    if: github.event.deployment_status.state == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate the AsyncAPI definition
        uses: WaleedAshraf/asyncapi-github-action@v0
        with:
          definition-file: docs/api/asyncapi.yaml

  validate-openapi:
    if: github.event.deployment_status.state == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate the OpenAPI definition
        uses: char0n/swagger-editor-validate@v1
        with:
          definition-file: docs/api/openapi.yaml

  static-code-analysis:
    if: github.event.deployment_status.state == 'success'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'

    - name: Install Dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Run Prettier
      run: npm run format

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm ci

      - name: TODO Install Local Stack dependencies
        run: echo "TODO"

      - name: TODO Start Local Stack
        run: echo "TODO"

      - name: TODO Apply Terraform to Local Stack
        run: echo "TODO"

      - name: Run Cypress tests
        uses: cypress-io/github-action@v2
        with:
          start: npm start
          wait-on: 'http://localhost:3000'
        env:
          # Pass the GitHub token to allow detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_BASE_URL: ${{ github.event.deployment_status.target_url }}
