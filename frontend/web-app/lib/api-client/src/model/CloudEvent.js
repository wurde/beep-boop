/**
 * Main API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient'

/**
 * The CloudEvent model module.
 * @module model/CloudEvent
 * @version 0.1.0
 */
class CloudEvent {
  /**
   * Constructs a new <code>CloudEvent</code>.
   * @alias module:model/CloudEvent
   * @param specversion {Object} The version of the CloudEvents specification used in the event.
   * @param source {Object} A URI describing the event producer.
   * @param type {Object} The type of the occurrence which has happened.
   * @param id {Object} A value describing the type of event related to the originating occurrence.
   * @param time {Object} A timestamp of when the occurrence happened.
   * @param data {Object} The event payload.
   */
  constructor(specversion, source, type, id, time, data) {
    CloudEvent.initialize(this, specversion, source, type, id, time, data)
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, specversion, source, type, id, time, data) {
    obj['specversion'] = specversion
    obj['source'] = source
    obj['type'] = type
    obj['id'] = id
    obj['time'] = time
    obj['data'] = data
  }

  /**
   * Constructs a <code>CloudEvent</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CloudEvent} obj Optional instance to populate.
   * @return {module:model/CloudEvent} The populated <code>CloudEvent</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CloudEvent()

      if (data.hasOwnProperty('specversion')) {
        obj['specversion'] = ApiClient.convertToType(
          data['specversion'],
          Object,
        )
      }
      if (data.hasOwnProperty('source')) {
        obj['source'] = ApiClient.convertToType(data['source'], Object)
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], Object)
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], Object)
      }
      if (data.hasOwnProperty('datacontenttype')) {
        obj['datacontenttype'] = ApiClient.convertToType(
          data['datacontenttype'],
          Object,
        )
      }
      if (data.hasOwnProperty('dataschema')) {
        obj['dataschema'] = ApiClient.convertToType(data['dataschema'], Object)
      }
      if (data.hasOwnProperty('subject')) {
        obj['subject'] = ApiClient.convertToType(data['subject'], Object)
      }
      if (data.hasOwnProperty('time')) {
        obj['time'] = ApiClient.convertToType(data['time'], Object)
      }
      if (data.hasOwnProperty('data')) {
        obj['data'] = ApiClient.convertToType(data['data'], Object)
      }
    }
    return obj
  }

  /**
   * Validates the JSON data with respect to <code>CloudEvent</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudEvent</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of CloudEvent.RequiredProperties) {
      if (!data[property]) {
        throw new Error(
          'The required field `' +
            property +
            '` is not found in the JSON data: ' +
            JSON.stringify(data),
        )
      }
    }

    return true
  }
}

CloudEvent.RequiredProperties = [
  'specversion',
  'source',
  'type',
  'id',
  'time',
  'data',
]

/**
 * The version of the CloudEvents specification used in the event.
 * @member {Object} specversion
 */
CloudEvent.prototype['specversion'] = undefined

/**
 * A URI describing the event producer.
 * @member {Object} source
 */
CloudEvent.prototype['source'] = undefined

/**
 * The type of the occurrence which has happened.
 * @member {Object} type
 */
CloudEvent.prototype['type'] = undefined

/**
 * A value describing the type of event related to the originating occurrence.
 * @member {Object} id
 */
CloudEvent.prototype['id'] = undefined

/**
 * @member {Object} datacontenttype
 */
CloudEvent.prototype['datacontenttype'] = undefined

/**
 * @member {Object} dataschema
 */
CloudEvent.prototype['dataschema'] = undefined

/**
 * @member {Object} subject
 */
CloudEvent.prototype['subject'] = undefined

/**
 * A timestamp of when the occurrence happened.
 * @member {Object} time
 */
CloudEvent.prototype['time'] = undefined

/**
 * The event payload.
 * @member {Object} data
 */
CloudEvent.prototype['data'] = undefined

export default CloudEvent
